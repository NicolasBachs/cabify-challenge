{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/cars": {
            "put": {
                "description": "Delete all existing data about cars and journeys and create new cars with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Put cars",
                "parameters": [
                    {
                        "description": "Array of cars to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controller.createCarRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PutCarsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new car with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Create car",
                "parameters": [
                    {
                        "description": "Car to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createCarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car ID",
                        "schema": {
                            "$ref": "#/definitions/response.CreateCarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "description": "Get car with the specified id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Get car by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Car"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dropoff": {
            "post": {
                "description": "Finish or cancell journey of the group with the specified ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Journeys"
                ],
                "summary": "Drop off car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "ID",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/journey": {
            "post": {
                "description": "Create a new journey with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Journeys"
                ],
                "summary": "Create journey",
                "parameters": [
                    {
                        "description": "Journey to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createJourneyRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/journeys/{id}": {
            "get": {
                "description": "Get journey with the specified id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Journeys"
                ],
                "summary": "Get journey by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Journey ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Journey"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/locate": {
            "post": {
                "description": "Get car assigned to the group with the specified ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Journeys"
                ],
                "summary": "Locate car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "ID",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Car"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healtcheck"
                ],
                "summary": "Status of the service",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.createCarRequest": {
            "type": "object",
            "required": [
                "id",
                "seats"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "seats": {
                    "type": "integer"
                }
            }
        },
        "controller.createJourneyRequest": {
            "type": "object",
            "required": [
                "id",
                "people"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "people": {
                    "type": "integer"
                }
            }
        },
        "entity.Car": {
            "type": "object",
            "properties": {
                "availableSeats": {
                    "type": "integer"
                },
                "creation_date": {
                    "type": "string"
                },
                "delete_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "journeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Journey"
                    }
                },
                "seats": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "entity.Journey": {
            "type": "object",
            "properties": {
                "car": {
                    "$ref": "#/definitions/entity.Car"
                },
                "car_assigned_id": {
                    "type": "integer"
                },
                "creation_date": {
                    "type": "string"
                },
                "delete_date": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "passengers": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/enum.JourneyStatus"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "enum.JourneyStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "ASSIGNED",
                "FINISHED",
                "CANCELLED"
            ],
            "x-enum-varnames": [
                "JourneyStatusPending",
                "JourneyStatusAssigned",
                "JourneyStatusFinished",
                "JourneyStatusCancelled"
            ]
        },
        "response.CreateCarResponse": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "integer"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "response.PutCarsResponse": {
            "type": "object",
            "properties": {
                "car_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}